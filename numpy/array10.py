# 2차원 배열의 인덱싱

import numpy as np


# 2차원 배열 정의 : 10 ~ 90까지 10씩 증가된 배열
a2 = np.arange(10, 100, 10).reshape(3, 3)
print(a2)                   # [[10 20 30]
                            #  [40 50 60]
                            #  [70 80 90]]

# 배열명[행위치, 열위치] : 0행 2열의 원소를 구함
print(a2[0, 2])             # 30

# 0행 2열의 값을 90 -> 95 로 변경
a2[2, 2] = 95
print(a2)                   # [[10 20 30]
                            #  [40 50 60]
                            #  [70 80 95]]

# 2차원 배열의 1행 전체를 변경:[40,50,60]->[45,55,65]
a2[1] = np.array([45, 55, 65])
print(a2)                   # [[10 20 30]
                            #  [45 55 65]
                            #  [70 80 95]]

# 2차원 배열의 행과 열의 위치를 지정해서 여러 원소 구하기
# 배열명[ [행위치1,행위치2],[열위치1,열위치2] ]
# (0,0)위치의 원소 10, (2,1)위치의 원소 80 을 구함
print(a2[[0, 2], [0, 1]])   # [10 80]

# 2차원 배열에서 조건을 만족하는 원소 구하기
# 배열명[조건] : 조건에 맞는 원소만 구함
a = np.array([1, 2, 3, 4, 5, 6])
print(a[a > 3])             # [4 5 6]